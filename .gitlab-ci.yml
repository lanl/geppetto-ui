image: gitlab-registry.mediforprogram.com/medifor/medifor-demo-ui/docker:latest

services:
  - gitlab-registry.mediforprogram.com/medifor/medifor-demo-ui/docker:dind

stages:
  - build
  - test
  - version
  - release
  - deploy

variables:
  GITLAB_TOKEN: $TOKEN
  GITLAB_URL: $CI_API_V4_URL

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - apk add --no-cache bash git npm

build-master:
  stage: build
  script:
    - ./dockerBuild.sh -b "$CI_COMMIT_REF_NAME" --name "$CI_REGISTRY_IMAGE"
    #   - docker images
    - docker push "$CI_REGISTRY_IMAGE"
    - docker tag "$CI_REGISTRY_IMAGE" "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - master

build:
  stage: build
  script:
    - ./dockerBuild.sh -b "$CI_COMMIT_REF_NAME" --name "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master
  only:
    - branches

version:
  stage: version
  script:
    # - git status
    # - printenv
    # - echo "machine ${CI_SERVER_HOST} login evega password ${TOKEN}" > ~/.netrc
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/exec conventional-changelog-conventionalcommits
    - semantic-release
    - |
      if [ -f version.txt ]
      then
        version="$(cat version.txt)"
        echo "Version: ${version}"
        docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$CI_REGISTRY_IMAGE:$version"
        docker push "$CI_REGISTRY_IMAGE:$version"
      else
        echo "No new version created"
      fi
  only:
    - develop
    - master
